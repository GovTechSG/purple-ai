{
  "button_role=\"presentation\"": "The issue in the given code snippet is that the button element has an inappropriate role attribute value \"presentation\". The \"presentation\" role is used to remove the semantic meaning of an element, which is not suitable for a button. The correct version of the code snippet should not include the role attribute for a button element.\n\nCorrect version:\n\n<button type=\"button\"><i></i></button>",
  "form_role=\"form\"": "The issue in the given code snippet is that the role attribute has an inappropriate value. The `form` element already has a default role of \"form\", so it is unnecessary to add a role attribute with the same value. To fix this, simply remove the role attribute from the `form` element.\n\nCorrected code snippet:\n\n```\n<form>\n```",
  "input_role=\"button\"": "The issue in the given code snippet is that the `role` attribute has an inappropriate value. The element is an `input` with a `type` of \"checkbox\", but the `role` is set to \"button\". The correct role for a checkbox input should be \"checkbox\".\n\nHere's the corrected version of the code snippet:\n\n```html\n<input aria-expanded=\"false\" aria-label=\"...\" role=\"checkbox\" type=\"checkbox\">\n```",
  "a_role=\"tooltip\"": "The issue in the given code snippet is that the `role` attribute has an inappropriate value \"tooltip\" for an anchor (`<a>`) element. The correct role for an anchor element is \"link\". Here is the corrected version of the code snippet:\n\n```html\n<a aria-describedby=\"tooltip-overview-5\" href=\"...\" role=\"link\"><i></i></a>\n```",
  "button_role=\"heading\"": "The issue in this code snippet is that the `role` attribute has an inappropriate value \"heading\" for a button element. The correct value should be \"button\". Here's the corrected code snippet:\n\n```html\n<button aria-expanded=\"true\" role=\"button\" type=\"button\">\n```",
  "iframe_role=\"region\"": "The issue in the given code snippet is that the `role` attribute is set to \"region\" for an `iframe` element. The \"region\" role is not appropriate for an `iframe`. Instead, you should use the \"document\" or \"application\" role for an `iframe` depending on its content.\n\nHere's the corrected version of the code snippet:\n\n```\n<iframe aria-label=\"...\" name=\"...\" role=\"document\" style=\"border: 0px; vertical-align: bottom;\" tabindex=\"0\" title=\"...\"></iframe>\n```\n\nIn this corrected version, the `role` attribute is set to \"document\". If the content of the `iframe` is more like an application, you can use `role=\"application\"` instead.",
  "section_role=\"tablist\"": "The issue in the given code snippet is that the `role` attribute has an inappropriate value \"tablist\" for the `section` element. A `section` element should not have a \"tablist\" role as it is not semantically correct. The \"tablist\" role should be used with a `div` or similar container element that holds a group of tabs.\n\nHere's the corrected version of the code snippet:\n\n```\n<div role=\"tablist\">\n  <section>\n    <!-- Your content here -->\n  </section>\n</div>\n```\n\nIn this corrected version, I have wrapped the `section` element inside a `div` element and assigned the \"tablist\" role to the `div` element. Now, the `section` element can be used to represent a tab panel, while the `div` element with the \"tablist\" role will act as a container for the group of tabs.",
  "textarea_role=\"combobox\"": "The issue in the code snippet is that the `role` attribute is set to \"combobox\" on a `textarea` element. A combobox role should be associated with an input element, not a textarea element. Also, the `type` attribute is not valid for a textarea element. Here's the corrected version of the code snippet:\n\n```html\n<div role=\"combobox\" aria-haspopup=\"both\" aria-owns=\"Alh6id\" aria-expanded=\"false\">\n  <input\n    aria-activedescendant=\"\"\n    aria-autocomplete=\"both\"\n    aria-controls=\"Alh6id\"\n    aria-label=\"...\"\n    name=\"...\"\n    title=\"...\"\n    type=\"search\"\n    value=\"...\"\n  />\n  <textarea aria-label=\"...\" name=\"...\" title=\"...\"></textarea>\n</div>\n```\n\nIn this corrected version, I've wrapped the input and textarea elements inside a div with the role of \"combobox\". The input element now has the appropriate attributes, and the textarea element no longer has the invalid attributes.",
  "label_role=\"radio\"": "The issue in the code snippet is that the `role` attribute is set to \"radio\" for a `label` element, which is inappropriate. The `role` attribute should be set on the actual input element instead.\n\nHere's the correct version of the code snippet:\n\n```html\n<label for=\"radioInput\" aria-label=\"...\" title=\"...\">\n  <input\n    type=\"radio\"\n    id=\"radioInput\"\n    name=\"...\"\n    aria-checked=\"false\"\n    aria-required=\"true\"\n    tabindex=\"0\"\n    role=\"radio\"\n  >\n</label>\n```\n\nI moved the `role`, `aria-checked`, `aria-required`, `name`, and `tabindex` attributes to the correct `input` element and added a `for` attribute to the `label` element to associate it with the input.",
  "section_role=\"list\"": "The issue in the code snippet is that the `role` attribute has an inappropriate value \"list\" for the `section` element. The correct version of the code snippet should use an appropriate element for the \"list\" role, such as an unordered list `<ul>` or an ordered list `<ol>`.\n\nCorrected code snippet:\n\n```html\n<ul role=\"list\">\n  <!-- List items go here -->\n</ul>\n```\n\nOr, if you want to use an ordered list:\n\n```html\n<ol role=\"list\">\n  <!-- List items go here -->\n</ol>\n```",
  "li_role=\"button\"": "The issue in the code snippet is that the `role` attribute is set to \"button\" for a list item (`<li>`), which is inappropriate. List items should have a role of \"listitem\". Here's the corrected version of the code snippet:\n\n```\n<li role=\"listitem\" tabindex=\"0\">\n```",
  "input_role=\"link\"": "The issue in the given code snippet is that the `input` element with `type=\"submit\"` has an inappropriate value for the `role` attribute. The `role` attribute is set to \"link\", which is incorrect for a submit button. The correct value for the `role` attribute for a submit button should be \"button\".\n\nHere's the correct version of the code snippet:\n\n```html\n<input name=\"...\" onclick=\"if(document.getElementById('loginForm').checkValidity()){this.onclick = function () { return false; }};\" role=\"button\" type=\"submit\" value=\"...\">\n```"
}
